// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {})
}

/**
 * BookInfo
 * Book identification across all endpoints.
 */
export type BookInfo = {
    /**
     * Book Id
     */
    book_id: number
    /**
     * Book Name
     */
    book_name: string
    /**
     * Display Book Name
     */
    display_book_name: string
}

/**
 * BookMetadata
 * Book metadata extends BookInfo with structure details.
 */
export type BookMetadata = {
    /**
     * Book Id
     */
    book_id: number
    /**
     * Book Name
     */
    book_name: string
    /**
     * Display Book Name
     */
    display_book_name: string
    /**
     * Chapter Count
     */
    chapter_count: number
    /**
     * Chapters
     */
    chapters: Array<ChapterInfo>
}

/**
 * ChapterInfo
 */
export type ChapterInfo = {
    /**
     * Chapter
     */
    chapter: number
    /**
     * Verse Count
     */
    verse_count: number
}

/**
 * ContentResponse
 */
export type ContentResponse = {
    /**
     * Content
     */
    content: Array<TranslationContent>
    /**
     * Total Verses
     */
    total_verses: number
}

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>
}

/**
 * SearchResponse
 */
export type SearchResponse = {
    /**
     * Verses
     */
    verses: Array<VerseData>
    /**
     * Total Count
     */
    total_count: number
}

/**
 * TranslationContent
 */
export type TranslationContent = {
    /**
     * Translation Id
     */
    translation_id: string
    /**
     * Verses
     */
    verses: Array<VerseData>
}

/**
 * TranslationInfo
 * Translation identification and metadata.
 */
export type TranslationInfo = {
    /**
     * Public Id
     */
    public_id: string
    /**
     * Abbreviation
     */
    abbreviation: string
    /**
     * Full Name
     */
    full_name: string
    /**
     * Language Code
     */
    language_code: string
}

/**
 * TranslationMetadata
 * Translation metadata with complete structure.
 */
export type TranslationMetadata = {
    /**
     * Public Id
     */
    public_id: string
    /**
     * Abbreviation
     */
    abbreviation: string
    /**
     * Full Name
     */
    full_name: string
    /**
     * Language Code
     */
    language_code: string
    /**
     * Books
     */
    books: Array<BookMetadata>
    /**
     * Total Books
     */
    total_books: number
    /**
     * Total Chapters
     */
    total_chapters: number
    /**
     * Total Verses
     */
    total_verses: number
}

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>
    /**
     * Message
     */
    msg: string
    /**
     * Error Type
     */
    type: string
}

/**
 * VerseData
 * A Bible verse with complete reference and text.
 */
export type VerseData = {
    book: BookInfo
    /**
     * Chapter
     */
    chapter: number
    /**
     * Verse
     */
    verse: number
    /**
     * Text
     */
    text: string
}

export type HealthHealthGetData = {
    body?: never
    path?: never
    query?: never
    url: '/health'
}

export type HealthHealthGetResponses = {
    /**
     * Response Health Health Get
     * Successful Response
     */
    200: {
        [key: string]: string
    }
}

export type HealthHealthGetResponse =
    HealthHealthGetResponses[keyof HealthHealthGetResponses]

export type GetTranslationsApiTranslationsGetData = {
    body?: never
    path?: never
    query?: never
    url: '/api/translations'
}

export type GetTranslationsApiTranslationsGetResponses = {
    /**
     * Response Get Translations Api Translations Get
     * Successful Response
     */
    200: Array<TranslationInfo>
}

export type GetTranslationsApiTranslationsGetResponse =
    GetTranslationsApiTranslationsGetResponses[keyof GetTranslationsApiTranslationsGetResponses]

export type GetTranslationMetadataApiTranslationsTranslationIdMetadataGetData =
    {
        body?: never
        path: {
            /**
             * Translation Id
             */
            translation_id: string
        }
        query?: never
        url: '/api/translations/{translation_id}/metadata'
    }

export type GetTranslationMetadataApiTranslationsTranslationIdMetadataGetErrors =
    {
        /**
         * Validation Error
         */
        422: HttpValidationError
    }

export type GetTranslationMetadataApiTranslationsTranslationIdMetadataGetError =
    GetTranslationMetadataApiTranslationsTranslationIdMetadataGetErrors[keyof GetTranslationMetadataApiTranslationsTranslationIdMetadataGetErrors]

export type GetTranslationMetadataApiTranslationsTranslationIdMetadataGetResponses =
    {
        /**
         * Successful Response
         */
        200: TranslationMetadata
    }

export type GetTranslationMetadataApiTranslationsTranslationIdMetadataGetResponse =
    GetTranslationMetadataApiTranslationsTranslationIdMetadataGetResponses[keyof GetTranslationMetadataApiTranslationsTranslationIdMetadataGetResponses]

export type SearchVersesApiSearchGetData = {
    body?: never
    path?: never
    query: {
        /**
         * Q
         * Search query
         */
        q: string
        /**
         * Translation Id
         * Public ID of the translation to search in
         */
        translation_id: string
        /**
         * Exact
         * Use exact match searching
         */
        exact?: boolean
    }
    url: '/api/search'
}

export type SearchVersesApiSearchGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError
}

export type SearchVersesApiSearchGetError =
    SearchVersesApiSearchGetErrors[keyof SearchVersesApiSearchGetErrors]

export type SearchVersesApiSearchGetResponses = {
    /**
     * Successful Response
     */
    200: SearchResponse
}

export type SearchVersesApiSearchGetResponse =
    SearchVersesApiSearchGetResponses[keyof SearchVersesApiSearchGetResponses]

export type GetContentApiContentGetData = {
    body?: never
    path?: never
    query: {
        /**
         * Translation Ids
         * Comma-separated translation IDs
         */
        translation_ids: string
        /**
         * Start Book
         * Starting book name
         */
        start_book: string
        /**
         * Start Chapter
         * Starting chapter number
         */
        start_chapter: number
        /**
         * Start Verse
         * Starting verse (None for whole chapter)
         */
        start_verse?: number | null
        /**
         * End Book
         * Ending book name (None for single verse/chapter)
         */
        end_book?: string | null
        /**
         * End Chapter
         * Ending chapter number
         */
        end_chapter?: number | null
        /**
         * End Verse
         * Ending verse number
         */
        end_verse?: number | null
    }
    url: '/api/content'
}

export type GetContentApiContentGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError
}

export type GetContentApiContentGetError =
    GetContentApiContentGetErrors[keyof GetContentApiContentGetErrors]

export type GetContentApiContentGetResponses = {
    /**
     * Successful Response
     */
    200: ContentResponse
}

export type GetContentApiContentGetResponse =
    GetContentApiContentGetResponses[keyof GetContentApiContentGetResponses]
