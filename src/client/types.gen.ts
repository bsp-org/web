// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseURL: `${string}://${string}` | (string & {})
}

/**
 * BookInfo
 * Book identification across all endpoints.
 */
export type BookInfo = {
    /**
     * Id
     */
    id: number
    /**
     * Name
     */
    name: string
    /**
     * Display Name
     */
    display_name: string
}

/**
 * BookMetadata
 * Book metadata extends BookInfo with structure details.
 */
export type BookMetadata = {
    /**
     * Id
     */
    id: number
    /**
     * Name
     */
    name: string
    /**
     * Display Name
     */
    display_name: string
    /**
     * Chapter Count
     */
    chapter_count: number
    /**
     * Chapters
     */
    chapters: Array<ChapterInfo>
}

/**
 * ChapterInfo
 */
export type ChapterInfo = {
    /**
     * Chapter
     */
    chapter: number
    /**
     * Verse Count
     */
    verse_count: number
}

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>
}

/**
 * PaginationInfo
 * Pagination metadata.
 */
export type PaginationInfo = {
    /**
     * Page
     */
    page: number
    /**
     * Page Size
     */
    page_size: number
    /**
     * Total Items
     */
    total_items: number
    /**
     * Total Pages
     */
    total_pages: number
    /**
     * Previous
     */
    previous: string | null
    /**
     * Next
     */
    next: string | null
}

/**
 * TranslationInfo
 * Translation identification and metadata.
 */
export type TranslationInfo = {
    /**
     * Public Id
     */
    public_id: string
    /**
     * Abbreviation
     */
    abbreviation: string
    /**
     * Full Name
     */
    full_name: string
    /**
     * Language Code
     */
    language_code: string
}

/**
 * TranslationMetadata
 * Translation metadata with complete structure.
 */
export type TranslationMetadata = {
    /**
     * Public Id
     */
    public_id: string
    /**
     * Abbreviation
     */
    abbreviation: string
    /**
     * Full Name
     */
    full_name: string
    /**
     * Language Code
     */
    language_code: string
    /**
     * Books
     */
    books: Array<BookMetadata>
    /**
     * Total Books
     */
    total_books: number
    /**
     * Total Chapters
     */
    total_chapters: number
    /**
     * Total Verses
     */
    total_verses: number
}

/**
 * UnifiedResponse
 * Unified response for verse retrieval with flexible filtering.
 */
export type UnifiedResponse = {
    pagination: PaginationInfo
    /**
     * Verses
     */
    verses: Array<VerseData>
}

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>
    /**
     * Message
     */
    msg: string
    /**
     * Error Type
     */
    type: string
}

/**
 * VerseData
 * A Bible verse with complete reference and text.
 */
export type VerseData = {
    book: BookInfo
    /**
     * Chapter
     */
    chapter: number
    /**
     * Verse
     */
    verse: number
    /**
     * Text
     */
    text: string
}

export type HealthHealthGetData = {
    body?: never
    path?: never
    query?: never
    url: '/health'
}

export type HealthHealthGetResponses = {
    /**
     * Response Health Health Get
     * Successful Response
     */
    200: {
        [key: string]: string
    }
}

export type HealthHealthGetResponse =
    HealthHealthGetResponses[keyof HealthHealthGetResponses]

export type GetTranslationsApiTranslationsGetData = {
    body?: never
    path?: never
    query?: never
    url: '/api/translations'
}

export type GetTranslationsApiTranslationsGetResponses = {
    /**
     * Response Get Translations Api Translations Get
     * Successful Response
     */
    200: Array<TranslationInfo>
}

export type GetTranslationsApiTranslationsGetResponse =
    GetTranslationsApiTranslationsGetResponses[keyof GetTranslationsApiTranslationsGetResponses]

export type GetTranslationMetadataApiTranslationsTranslationIdMetadataGetData =
    {
        body?: never
        path: {
            /**
             * Translation Id
             */
            translation_id: string
        }
        query?: never
        url: '/api/translations/{translation_id}/metadata'
    }

export type GetTranslationMetadataApiTranslationsTranslationIdMetadataGetErrors =
    {
        /**
         * Validation Error
         */
        422: HttpValidationError
    }

export type GetTranslationMetadataApiTranslationsTranslationIdMetadataGetError =
    GetTranslationMetadataApiTranslationsTranslationIdMetadataGetErrors[keyof GetTranslationMetadataApiTranslationsTranslationIdMetadataGetErrors]

export type GetTranslationMetadataApiTranslationsTranslationIdMetadataGetResponses =
    {
        /**
         * Successful Response
         */
        200: TranslationMetadata
    }

export type GetTranslationMetadataApiTranslationsTranslationIdMetadataGetResponse =
    GetTranslationMetadataApiTranslationsTranslationIdMetadataGetResponses[keyof GetTranslationMetadataApiTranslationsTranslationIdMetadataGetResponses]

export type GetVersesApiVersesGetData = {
    body?: never
    path?: never
    query: {
        /**
         * Translation Id
         * Translation ID
         */
        translation_id: string
        /**
         * Q
         * Search query (optional, can be combined with location constraints)
         */
        q?: string | null
        /**
         * Exact
         * Use exact match searching
         */
        exact?: boolean
        /**
         * Highlight
         * Highlight matches (default: true when q is provided)
         */
        highlight?: boolean | null
        /**
         * Book
         * Book name (for point queries)
         */
        book?: string | null
        /**
         * Chapter
         * Chapter number (for point queries)
         */
        chapter?: number | null
        /**
         * Verse
         * Verse number (for point queries)
         */
        verse?: number | null
        /**
         * From Book
         * Starting book name (for range queries)
         */
        from_book?: string | null
        /**
         * From Chapter
         * Starting chapter (for range queries)
         */
        from_chapter?: number | null
        /**
         * From Verse
         * Starting verse (for range queries)
         */
        from_verse?: number | null
        /**
         * To Book
         * Ending book name (for range queries)
         */
        to_book?: string | null
        /**
         * To Chapter
         * Ending chapter (for range queries)
         */
        to_chapter?: number | null
        /**
         * To Verse
         * Ending verse (for range queries)
         */
        to_verse?: number | null
        /**
         * Page
         * Page number
         */
        page?: number
        /**
         * Page Size
         * Number of verses per page
         */
        page_size?: number
    }
    url: '/api/verses'
}

export type GetVersesApiVersesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError
}

export type GetVersesApiVersesGetError =
    GetVersesApiVersesGetErrors[keyof GetVersesApiVersesGetErrors]

export type GetVersesApiVersesGetResponses = {
    /**
     * Successful Response
     */
    200: UnifiedResponse
}

export type GetVersesApiVersesGetResponse =
    GetVersesApiVersesGetResponses[keyof GetVersesApiVersesGetResponses]
